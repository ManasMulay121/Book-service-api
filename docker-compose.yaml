services:
  proxy:
    image: nginx:latest
    container_name: reverse-proxy
    ports:
      - "${PROXY_PORT:-80}:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web-app
      - api-server

  web-app:
    build:
      context: ./client
      args:
        VITE_API_KEY: ${VITE_API_KEY}
        VITE_API_URL: ${VITE_API_URL:-/api}
    container_name: web-app
    expose:
      - "80"
    environment:
      - VITE_API_URL=${VITE_API_URL:-/api}
      - VITE_API_KEY=${VITE_API_KEY}
    env_file:
      - .env

  api-server:
    build: ./server
    container_name: api-server
    expose:
      - "3000"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - PORT=${API_SERVER_PORT:-3000}
      - API_KEY=${API_KEY}
    env_file:
      - .env
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database.sql:/docker-entrypoint-initdb.d/database.sql:ro

volumes:
  postgres_data:
